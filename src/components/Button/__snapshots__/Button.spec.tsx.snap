// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button /> Should be render correctly 1`] = `
<RNGestureHandlerButton
  activeOpacity={0.105}
  collapsable={false}
  color="#009Cf7"
  delayLongPress={600}
  enabled={true}
  handlerTag={1}
  handlerType="NativeViewGestureHandler"
  onActiveStateChange={[Function]}
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#009Cf7",
      "borderColor": "black",
      "borderRadius": 6,
      "borderStyle": "solid",
      "borderWidth": 0,
      "display": "flex",
      "height": 56,
      "justifyContent": "center",
      "marginBottom": 0,
      "marginLeft": 0,
      "marginRight": 0,
      "marginTop": 0,
      "opacity": 1,
      "paddingBottom": 8,
      "paddingLeft": 12,
      "paddingRight": 12,
      "paddingTop": 8,
      "width": "100%",
    }
  }
  underlayColor="black"
  variant="solid"
>
  <View
    collapsable={false}
    style={
      Object {
        "backgroundColor": "black",
        "borderBottomLeftRadius": undefined,
        "borderBottomRightRadius": undefined,
        "borderRadius": 6,
        "borderTopLeftRadius": undefined,
        "borderTopRightRadius": undefined,
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
  <Text
    color="#009Cf7"
    style={
      Array [
        Object {
          "color": "#FFFFFF",
          "fontFamily": "Poppins-Bold",
          "fontSize": 18,
        },
      ]
    }
    variant="solid"
  >
    Teste
  </Text>
</RNGestureHandlerButton>
`;

exports[`<Button /> Should be render variant outline correctly 1`] = `
<RNGestureHandlerButton
  activeOpacity={0.105}
  collapsable={false}
  color="#009Cf7"
  delayLongPress={600}
  enabled={true}
  handlerTag={2}
  handlerType="NativeViewGestureHandler"
  onActiveStateChange={[Function]}
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#FFFFFF",
      "borderColor": "#009Cf7",
      "borderRadius": 6,
      "borderStyle": "solid",
      "borderWidth": 2,
      "display": "flex",
      "height": 56,
      "justifyContent": "center",
      "marginBottom": 0,
      "marginLeft": 0,
      "marginRight": 0,
      "marginTop": 0,
      "opacity": 1,
      "paddingBottom": 8,
      "paddingLeft": 12,
      "paddingRight": 12,
      "paddingTop": 8,
      "width": "100%",
    }
  }
  underlayColor="black"
  variant="outline"
>
  <View
    collapsable={false}
    style={
      Object {
        "backgroundColor": "black",
        "borderBottomLeftRadius": undefined,
        "borderBottomRightRadius": undefined,
        "borderRadius": 6,
        "borderTopLeftRadius": undefined,
        "borderTopRightRadius": undefined,
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
  <Text
    color="#009Cf7"
    style={
      Array [
        Object {
          "color": "#009Cf7",
          "fontFamily": "Poppins-Bold",
          "fontSize": 18,
        },
      ]
    }
    variant="outline"
  >
    Teste
  </Text>
</RNGestureHandlerButton>
`;
