// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ActionModal /> Should render correctly 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  style={
    Array [
      Object {},
    ]
  }
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#363F5Faa",
        "display": "flex",
        "height": "100%",
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 16,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 16,
        "width": "100%",
      }
    }
    testID="overlay"
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#F4F4F4",
          "borderRadius": 16,
          "opacity": 1,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "paddingBottom": 24,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 24,
              "width": "100%",
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "fontFamily": "Poppins-Medium",
                "fontSize": 18,
              },
            ]
          }
        >
          Modal Test
        </Text>
        <View
          dimesion={24}
          style={
            Array [
              Object {
                "height": 24,
                "width": 24,
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "width": "100%",
              },
            ]
          }
        >
          <View
            borderColor="#0D0A0B"
            borderWidth={1}
            isFocused={false}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#0D0A0B",
                  "borderRadius": 6,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "opacity": 1,
                  "paddingBottom": 0,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 0,
                  "transition": "border-color 0.3s ease-in",
                  "width": "100%",
                },
              ]
            }
          >
            <TextInput
              editable={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="Informe o nome"
              style={
                Array [
                  Object {
                    "color": "#0D0A0B",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "fontFamily": "Poppins-Regular",
                    "fontSize": 16,
                    "height": 50,
                    "paddingBottom": 8,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 8,
                  },
                ]
              }
              testID="input"
              value=""
            />
          </View>
        </View>
        <View
          dimesion={48}
          style={
            Array [
              Object {
                "height": 48,
                "width": 48,
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              activeOpacity={0.105}
              collapsable={false}
              color="#FE5F55"
              delayLongPress={600}
              enabled={true}
              handlerTag={1}
              handlerType="NativeViewGestureHandler"
              onActiveStateChange={[Function]}
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FE5F55",
                  "borderRadius": 6,
                  "borderStyle": "solid",
                  "borderWidth": 2,
                  "display": "flex",
                  "height": 56,
                  "justifyContent": "center",
                  "marginBottom": 0,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 0,
                  "opacity": 1,
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                  "width": "100%",
                }
              }
              testID="cancelButton"
              underlayColor="black"
              variant="outline"
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": 6,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                color="#FE5F55"
                style={
                  Array [
                    Object {
                      "color": "#FE5F55",
                      "fontFamily": "Poppins-Bold",
                      "fontSize": 18,
                    },
                  ]
                }
                variant="outline"
              >
                Cancelar
              </Text>
            </RNGestureHandlerButton>
          </View>
          <View
            dimesion={16}
            style={
              Array [
                Object {
                  "height": 16,
                  "width": 16,
                },
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <RNGestureHandlerButton
              activeOpacity={0.105}
              collapsable={false}
              color="#009Cf7"
              delayLongPress={600}
              enabled={true}
              handlerTag={2}
              handlerType="NativeViewGestureHandler"
              onActiveStateChange={[Function]}
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#009Cf7",
                  "borderColor": "black",
                  "borderRadius": 6,
                  "borderStyle": "solid",
                  "borderWidth": 0,
                  "display": "flex",
                  "height": 56,
                  "justifyContent": "center",
                  "marginBottom": 0,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 0,
                  "opacity": 1,
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                  "width": "100%",
                }
              }
              testID="successButton"
              underlayColor="black"
              variant="solid"
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": 6,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                color="#009Cf7"
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontFamily": "Poppins-Bold",
                      "fontSize": 18,
                    },
                  ]
                }
                variant="solid"
              >
                Test
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
